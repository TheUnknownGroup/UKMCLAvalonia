name: Build UKMCLAvalonia

on:
    push:
        branches:
            - main
    workflow_dispatch:

env:
    sdk-ver: '8.0.x'
    dir: "${{ github.workspace }}/bin/Release/net8.0"
    win-filename: "UKMCLAvalonia-Windows-Installer-en_US-"
    lin-filename: "UKMCLAvalonia-Linux-Installer-en_US-"
    mac-filename: "UKMCLAvalonia-MacOS-Installer-en_US-"
    ver: "0.0.0-experimental+build.1"
    py_ver: "3.13.2"
    pre: true

jobs:
  buildPublishers:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    permissions:
        contents: write
        id-token: write
    
    strategy:
      matrix:
        os: [win-x64, win-arm64, linux-x64, linux-arm64, osx-x64, osx-arm64]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup .net sdk
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.sdk-ver }}

      - name: install linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libc6 libx11-6 libice6 libsm6 \
          libfontconfig libgcc-s1 libssl3 libstdc++6 tzdata zlib1g

      - name: publish
        run: |
          dotnet publish -c Release -r ${{ matrix.os }} --self-contained true -o out/${{ matrix.os }}

      - name: upload ${{ matrix.os }}
        uses: actions/upload-artifact@v4
        with:
          name: out-${{ matrix.os }}
          path: |
            out/${{ matrix.os }}/
          retention-days: 1

  buildInstaller-Win:
      if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

      needs: [buildPublishers]

      permissions:
          contents: write
          id-token: write
      
      runs-on: windows-latest
      steps:
          - uses: actions/checkout@v4

          - uses: actions/download-artifact@v4
            with:
              name: out-win-x64
              path: ${{ github.workspace }}\out\win-x64

          - uses: actions/download-artifact@v4
            with:
              name: out-win-arm64
              path: ${{ github.workspace }}\out\win-arm64
            
          - name: build installer x64
            run: |
              cd ${{ github.workspace }}\packaging\exe-x64
              
              copy -r "${{ github.workspace }}\out\win-x64\*"

              curl https://mlaan2.home.xs4all.nl/ispack/innosetup-6.2.1.exe --output innosetup.exe
              Start-Process .\innosetup.exe /VERYSILENT -Wait

              cd "C:\Program Files (x86)\Inno Setup 6"
              iscc "${{ github.workspace }}\packaging\exe-x64\installer.iss"
              
          - name: build installer arm64
            run: |
              cd ${{ github.workspace }}\packaging\exe-arm64
              
              copy -r "${{ github.workspace }}\out\win-arm64\*"

              curl https://mlaan2.home.xs4all.nl/ispack/innosetup-6.2.1.exe --output innosetup.exe
              Start-Process .\innosetup.exe /VERYSILENT -Wait

              cd "C:\Program Files (x86)\Inno Setup 6"
              iscc "${{ github.workspace }}\packaging\exe-arm64\installer.iss"

          - name: upload artifacts
            uses: actions/upload-artifact@v4
            with:
              name: wins-x64
              path: |
                ${{ github.workspace }}\packaging\exe-x64\${{ env.win-filename }}x64+0.0.0.exe
              retention-days: 1
              
          - name: upload artifacts
            uses: actions/upload-artifact@v4
            with:
              name: wins-arm64
              path: |
                ${{ github.workspace }}\packaging\exe-arm64\${{ env.win-filename }}arm64+0.0.0.exe
              retention-days: 1

          - name: upload zip x64
            uses: actions/upload-artifact@v4
            with:
              name: UKMCLAvalonia-Windows-Zip-x64
              path: ${{ github.workspace }}\out\win-x64\
                
          - name: upload zip arm64
            uses: actions/upload-artifact@v4
            with:
              name: UKMCLAvalonia-Windows-Zip-arm64
              path: ${{ github.workspace }}\out\win-arm64\

  buildInstaller-Lin:
      if: ${{ !contains(github.event.head_commit.message, '[skip]') }}
      
      needs: [buildPublishers]

      permissions:
          contents: write
          id-token: write

      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v4

          - uses: actions/download-artifact@v4
            with:
              name: out-linux-arm64
              path: ${{ github.workspace }}/out/linux-arm64
          
          - uses: actions/download-artifact@v4
            with:
              name: out-linux-x64
              path: ${{ github.workspace }}/out/linux-x64

          - name: build installer .deb x64
            run: |
              cd packaging/deb-x64/usr
              mkdir -p share/UKMCL/
              cd ${{ github.workspace }}
              cp -r ${{ github.workspace }}/out/linux-x64 packaging/deb-x64/usr/share/UKMCL/
              sed -i 's/${VERSION}/${{ env.ver }}/g' packaging/deb-x64/DEBIAN/control
              fakeroot dpkg-deb --build packaging/deb-x64 "${{ env.lin-filename }}x64.deb"

          - name: build installer .deb arm64
            run: |
              cd packaging/deb-arm64/usr
              mkdir -p share/UKMCL/
              cd ${{ github.workspace }}
              cp -r ${{ github.workspace }}/out/linux-arm64 packaging/deb-arm64/usr/share/UKMCL/
              sed -i 's/${VERSION}/${{ env.ver }}/g' packaging/deb-arm64/DEBIAN/control
              fakeroot dpkg-deb --build packaging/deb-arm64 "${{ env.lin-filename }}arm64.deb"

          - name: upload .deb's
            uses: actions/upload-artifact@v4
            with:
              name: lins
              path: |
                ${{ env.lin-filename }}x64.deb
                ${{ env.lin-filename }}arm64.deb
              retention-days: 1

  buildInstaller-Mac:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}
      
    needs: [buildPublishers]

    permissions:
        contents: write
        id-token: write

    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: out-osx-x64
          path: ${{ github.workspace }}/out/osx-x64
          
      - uses: actions/download-artifact@v4
        with:
          name: out-osx-arm64
          path: ${{ github.workspace }}/out/osx-arm64

      - name: build install .dmg x64
        run: |
          mkdir -p UKMCLAvalonia-x64.app
          mkdir -p UKMCLAvalonia-x64.app/Contents/Resources
          mkdir -p UKMCLAvalonia-x64.app/Contents/MacOS/
          cd UKMCLAvalonia-x64.app/Contents/MacOS/
          cp -r ${{ github.workspace }}/out/osx-x64/. ./
          cp -r ${{ github.workspace }}/Assets/icon.icns ../Resources/
          cd ${{ github.workspace }}
          hdiutil create -volname "UKMCLAvalonia-x64" -srcfolder "UKMCLAvalonia-x64.app" -ov -format UDZO ${{ env.mac-filename }}x64.dmg
        continue-on-error: true

      - name: build install .dmg arm64
        run: |
          mkdir -p UKMCLAvalonia-arm64.app
          mkdir -p UKMCLAvalonia-arm64.app/Contents/Resources
          mkdir -p UKMCLAvalonia-arm64.app/Contents/MacOS/
          cd UKMCLAvalonia-arm64.app/Contents/MacOS/
          cp -r ${{ github.workspace }}/out/osx-arm64/. ./
          cp -r ${{ github.workspace }}/Assets/icon.icns ../Resources/
          cd ${{ github.workspace }}
          hdiutil create -volname "UKMCLAvalonia-arm64" -srcfolder "UKMCLAvalonia-arm64.app" -ov -format UDZO ${{ env.mac-filename }}arm64.dmg
        continue-on-error: true

      - name: upload .dmg's
        uses: actions/upload-artifact@v4
        with:
          name: macs
          path: |
            ${{ env.mac-filename }}x64.dmg
            ${{ env.mac-filename }}arm64.dmg
          retention-days: 1
  sign:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    needs: [ buildPublishers, buildInstaller-Win, buildInstaller-Lin, buildInstaller-Mac ]

    permissions:
      contents: write
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: download stuff
        uses: actions/download-artifact@v4

      - run: |
          mkdir files/
          cp macs/*.dmg files/
          cp lins/*.deb files/
          cp wins-x64/*.exe files/
          cp wins-arm64/*.exe files/
      
      - name: py install
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.py_ver }}

      - name: verify py
        run: python --version

      - name: pip install
        shell: pwsh
        run: python -m ensurepip --upgrade
      
      - name: sign sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: |
            files/*.exe
            files/*.dmg
            files/*.deb
          verify: true
          verify-cert-identity: https://github.com/TheUnknownGroup/UKMCLAvalonia/.github/workflows/build.yml@refs/heads/main
          verify-oidc-issuer: https://token.actions.githubusercontent.com
          upload-signing-artifacts: true
          
  release:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    needs: [ sign ]

    permissions:
      contents: write
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: download signed stuff
        uses: actions/download-artifact@v4

      - run: |
          mv signing-artifacts-sign sigstore
          mkdir sign/
          cp -r sigstore/*.exe sign/
          cp -r sigstore/*.dmg sign/
          cp -r sigstore/*.deb sign/

      - name: make win-x64 zip
        uses: thedoctor0/zip-release@main
        with:
          type: "zip"
          filename: "UKMCLAvalonia-Windows-x64.zip"
          path: UKMCLAvalonia-Windows-Zip-x64
      
      - name: make win-arm64 zip
        uses: thedoctor0/zip-release@main
        with:
          type: "zip"
          filename: "UKMCLAvalonia-Windows-arm64.zip"
          path: UKMCLAvalonia-Windows-Zip-arm64

      - name: create release
        uses: softprops/action-gh-release@v2.2.2
        with:
          name: UKMCLAvalonia V${{ env.ver }}
          tag_name: ${{ env.ver }}
          body_path: ${{ github.workspace }}/changelog.md
          generate_release_notes: true
          prerelease: ${{ env.pre }}
          files: |
            sign/*.exe
            sign/*.deb
            sign/*.dmg
            UKMCLAvalonia-Windows-x64.zip
            UKMCLAvalonia-Windows-arm64.zip

# must also zip all of this too
# rid: mac: osx-x64, osx-arm64; win: win-x64, win-arm64; lin: linux-x64, linux-arm64, linux-musl-x64
# For linux distributions, appimage for ubuntu, dpkg-deb for debian, flatpak for uni gui packaging, optional to snap