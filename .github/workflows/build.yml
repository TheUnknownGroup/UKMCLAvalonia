name: Build UKMCLAvalonia

on:
    push:
        branches:
            - main
    workflow_dispatch:

env:
    sdk-ver: '8.0.x'
    dir: "${{ github.workspace }}/bin/Release/net8.0"

jobs:
    buildPublishers-Win:
      if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

      strategy:
        matrix:
          os: [win-x64, win-arm64]
          files: [win-x64, win-arm64]

      permissions:
          contents: write
          id-token: write
      
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        - name: setup .net sdk
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: ${{ env.sdk-ver }}

        - name: publish
          env:
            pub_dir: ${{ env.dir }}/${{ matrix.os }}/publish
          run: |
            dotnet publish -c Release -r ${{ matrix.os }} --self-contained true
            mkdir -p out/${{ matrix.files }}
            cp -r "${{ env.pub_dir }}/*" out/${{ matrix.files }}

        - name: upload
          uses: actions/upload-artifact@v4
          with:
            name: wins
            path: out/${{ matrix.files }}

    buildPublishers-Lin:
      if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

      permissions:
        contents: write
        id-token: write

      strategy:
        matrix:
          os: [linux-x64, linux-arm64, linux-musl-x64]
          files: [lin-x64, lin-arm64, lin-musl-x64]

      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        - name: setup .net sdk
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: ${{ env.sdk-ver }}

        - name: install dependencies
          run: |
            sudo apt-get update
            sudo apt-get install -y libc6 libx11-6 libice6 libsm6 \
            libfontconfig libgcc-s1 libssl3 libstdc++6 tzdata zlib1g

        - name: publish
          env:
            pub_dir: ${{ env.dir }}/${{ matrix.os }}/publish
          run: |
            dotnet publish -c Release -r ${{ matrix.os }} --self-contained true
            mkdir -p out/${{ matrix.files }}
            cp -r "${{ env.pub_dir }}/*" out/${{ matrix.files }}


        - name: upload
          uses: actions/upload-artifact@v4
          with:
            name: lins
            path: out/${{ matrix.files }}


    buildPublishers-Mac:
      if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

      permissions:
        contents: write
        id-token: write

      strategy:
        matrix:
          os: [osx-x64, osx-arm64]
          files: [mac-x64, mac-arm64]

      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        - name: setup .net sdk
          uses: actions/setup-dotnet@v4
          with:
            dotnet-version: ${{ env.sdk-ver }}

        - name: publish
          env:
            pub_dir: ${{ env.dir }}/${{ matrix.os }}/publish
          run: |
            dotnet publish -c Release -r ${{ matrix.os }} --self-contained true
            mkdir -p out/${{ matrix.files }}
            cp -r "${{ env.pub_dir }}/*" out/${{ matrix.files }}

        - name: upload
          uses: actions/upload-artifact@v4
          with:
            name: macs
            path: out/${{ matrix.files }}

    buildWin:
        if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

        needs: [buildPublishers-Win]

        permissions:
            contents: write
            id-token: write

        strategy:
          matrix:
            os: [exe-x64, exe-arm64]
            os2: [win-x64, win-arm64]
        
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/download-artifact@v4
              with:
                path: ${{ github.workspace }}\published
              
            - name: build installer
              run: |
                cd ${{ github.workspace }}\packaging\${{ matrix.os }}
                
                copy -r "${{ github.workspace }}\out\${{ matrix.os2 }}\*"

                curl https://mlaan2.home.xs4all.nl/ispack/innosetup-6.2.1.exe --output innosetup.exe
                Start-Process .\innosetup.exe /VERYSILENT -Wait

                cd "C:\Program Files (x86)\Inno Setup 6"
                iscc "${{ github.workspace }}\packaging\${{ matrix.os }}\installer.iss"

            - name: upload artifacts
              uses: actions/upload-artifact@v4
              with:
                name: wins
                path: |
                  ${{ github.workspace }}\packaging\exe-x64\UKMCL-Windows-Installer-en_US-x64+0.0.0.exe
                  ${{ github.workspace }}\packaging\exe-arm64\UKMCL-Windows-Installer-en_US-arm64+0.0.0.exe
                retention-days: 1
# must also zip all of this too
# rid: mac: osx-x64, osx-arm64; win: win-x64, win-arm64; lin: linux-x64, linux-arm64, linux-musl-x64
# For linux distributions, appimage for ubuntu, dpkg-deb for debian, flatpak for uni gui packaging, optional to snap

    buildLin:
        if: ${{ !contains(github.event.head_commit.message, '[skip]') }}
        
        needs: [buildPublishers-Lin]

        permissions:
            contents: write
            id-token: write

        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
