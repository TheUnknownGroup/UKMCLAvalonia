name: Build UKMCLAvalonia

on:
    push:
        branches:
            - main
    workflow_dispatch:

env:
    sdk-ver: '8.0.x'
    win:

jobs:
    buildWin:
        if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

        permissions:
            contents: write
            id-token: write
        
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v4

            - name: setup .net sdk
              uses: actions/setup-dotnet@v4
              with:
                dotnet-version: ${{ env.sdk-ver }}

            - run: dotnet restore

            - name: build
              run: |
                dotnet build

              
# must also zip all of this too
# rid: mac: osx-x64, osx-arm64; win: win-x64, win-x86, win-arm64; lin: linux-x64, linux-arm, linux-arm64, linux-musl-x64
# For linux distributions, appimage for ubuntu, dpkg-deb for debian, flatpak for uni gui packaging, optional to snap

    buildLin:
        if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

        permissions:
            contents: write
            id-token: write

        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
  
            - name: setup .net sdk
              uses: actions/setup-dotnet@v4
              with:
                dotnet-version: ${{ env.sdk-ver }}

            - name: install dependencies
              run: |
                sudo apt-get update
                sudo apt-get install -y libc6 libx11-6 libice6 libsm6 \
                libfontconfig libgcc-s1 libssl3 libstdc++6 tzdata zlib1g


# name: Build Avalonia App

# on:
#   push:
#     branches: [main]

# jobs:
#   build:
#     strategy:
#       matrix:
#         os: [windows-latest, ubuntu-latest, macos-latest]
#         config: [Release]
#     runs-on: ${{ matrix.os }}

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Setup .NET 8 SDK
#         uses: actions/setup-dotnet@v3
#         with:
#           dotnet-version: 8.0.x

#       - name: Restore dependencies
#         run: dotnet restore

#       - name: Build project
#         run: dotnet build --configuration ${{ matrix.config }} --no-restore

#       - name: Publish self-contained app
#         run: >
#           dotnet publish -c ${{ matrix.config }}
#           -r ${{ runner.os == 'Windows' && 'win-x64' || (runner.os == 'Linux' && 'linux-x64' || 'osx-x64') }}
#           --self-contained true
#           -p:PublishSingleFile=true
#           -o publish/${{ runner.os }}

#       - name: Upload artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: AvaloniaApp-${{ runner.os }}
#           path: publish/${{ runner.os }}
