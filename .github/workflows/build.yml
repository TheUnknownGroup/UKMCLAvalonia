name: Build UKMCLAvalonia

on:
    push:
        branches:
            - main
    workflow_dispatch:

env:
    sdk-ver: '8.0.x'
    dir: "${{ github.workspace }}/bin/Release/net8.0"

jobs:
  buildPublishers:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    permissions:
        contents: write
        id-token: write
    
    strategy:
      matrix:
        os: [win-x64, win-arm64, linux-x64, linux-arm64, linux-musl-x64, osx-x64, osx-arm64]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup .net sdk
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.sdk-ver }}

      - name: install linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libc6 libx11-6 libice6 libsm6 \
          libfontconfig libgcc-s1 libssl3 libstdc++6 tzdata zlib1g

      - name: publish
        run: |
          dotnet publish -c Release -r ${{ matrix.os }} --self-contained true -o out/${{ matrix.os }}

      - name: upload ${{ matrix.os }}
        uses: actions/upload-artifact@v4
        with:
          name: out
          path: |
            out/${{ matrix.os }}/
          retention-days: 1

  buildInstaller-Win:
      if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

      needs: [buildPublishers]

      permissions:
          contents: write
          id-token: write
      
      runs-on: windows-latest
      steps:
          - uses: actions/checkout@v4

          - uses: actions/download-artifact@v4
            with:
              name: out
              path: ${{ github.workspace }}\out
            
          - name: build installer x64
            run: |
              cd ${{ github.workspace }}\packaging\exe-x64
              
              copy -r "${{ github.workspace }}\out\win-x64\*"

              curl https://mlaan2.home.xs4all.nl/ispack/innosetup-6.2.1.exe --output innosetup.exe
              Start-Process .\innosetup.exe /VERYSILENT -Wait

              cd "C:\Program Files (x86)\Inno Setup 6"
              iscc "${{ github.workspace }}\packaging\exe-x64\installer.iss"
              
          - name: build installer arm64
            run: |
              cd ${{ github.workspace }}\packaging\exe-arm64
              
              copy -r "${{ github.workspace }}\out\win-arm64\*"

              curl https://mlaan2.home.xs4all.nl/ispack/innosetup-6.2.1.exe --output innosetup.exe
              Start-Process .\innosetup.exe /VERYSILENT -Wait

              cd "C:\Program Files (x86)\Inno Setup 6"
              iscc "${{ github.workspace }}\packaging\exe-arm64\installer.iss"

          - name: upload artifacts
            uses: actions/upload-artifact@v4
            with:
              name: wins
              path: |
                ${{ github.workspace }}\packaging\exe-x64\UKMCL-Windows-Installer-en_US-x64+0.0.0.exe
                ${{ github.workspace }}\packaging\exe-arm64\UKMCL-Windows-Installer-en_US-arm64+0.0.0.exe
              retention-days: 1

  buildInstaller-Lin:
      if: ${{ !contains(github.event.head_commit.message, '[skip]') }}
      
      needs: [buildPublishers]

      permissions:
          contents: write
          id-token: write

      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v4

          - name: make installer
            run: echo 'Hi'


# must also zip all of this too
# rid: mac: osx-x64, osx-arm64; win: win-x64, win-arm64; lin: linux-x64, linux-arm64, linux-musl-x64
# For linux distributions, appimage for ubuntu, dpkg-deb for debian, flatpak for uni gui packaging, optional to snap